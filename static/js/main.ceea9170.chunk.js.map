{"version":3,"sources":["components/CharactersDropdown.js","assets/picture.jpg","components/WrongFind.js","components/Picture.js","components/helpers.js","components/Timer.js","components/Topbar.js","components/Characters.js","components/StartModal.js","components/Firebase.js","components/Leaderboard.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CharactersDropdown","props","style","position","left","clickedCoordinates","top","dropdownY","zIndex","width","iconStyle","height","ListGroup","className","charactersArray","map","item","i","Item","action","onClick","showFoundCharacter","foundIsCorrect","addFoundSquare","handleFoundCharacter","checkGameOver","toggleShowWrongFind","closeFoundCharacter","handleChoose","Image","src","process","url","name","variant","WrongFind","Modal","show","showWrongFind","size","onHide","centered","Header","closeButton","Title","Body","Footer","Button","Picture","useState","setShowFoundCharacter","setShowWrongFind","setClickedCoordinates","setDropdownY","e","x","pageX","y","pageY","clientY","windowHeight","getDropdownY","picture","onLoad","setWindowSize","windowWidth","foundSquares","squareStyle","border","newSquare","setFoundSquares","array","msToTime","s","pad","n","z","slice","ms","secs","formatTime","timer","getSeconds","minutes","Math","floor","getMinutes","Timer","setTimer","setIsActive","countRef","useRef","useEffect","player","gameStartTime","handleStart","gameTime","handlePause","current","setInterval","clearInterval","Navbar","Text","marginBottom","paddingRight","Topbar","imgStyle","bg","fixed","Container","Brand","Nav","Link","charractersArray","characters","id","StartModal","playerName","setPlayerName","showStartModal","backdrop","keyboard","Form","onSubmit","toggleShowStartModal","handleStartModalSubmit","startGame","Group","controlId","Label","Control","placeholder","onChange","target","value","required","type","href","title","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Leaderboard","listGroupStyle","display","justifyContent","showGameOverModal","resultsData","time","toggleShowGameOverModal","playAgain","App","setShowStartModal","setShowGameOverModal","setCharactersArray","setResultsData","setPlayer","setWindowWidth","setWindowHeight","setGameStartTime","setGameTime","postResult","a","addDoc","collection","getResultsData","resultsRef","q","query","orderBy","limit","getDocs","forEach","doc","push","data","length","Timestamp","now","toMillis","endGame","preventDefault","document","body","clientWidth","clientHeight","index","newArray","filter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ceea9170.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"../index.css\";\r\n\r\nconst CharactersDropdown = (props) => {\r\n  const style = {\r\n    position: \"absolute\",\r\n    left: `${props.clickedCoordinates[0] - 81}px`,\r\n    top: `${props.clickedCoordinates[1] + props.dropdownY}px`,\r\n    zIndex: 1031,\r\n    width: \"170px\",\r\n  };\r\n\r\n  const iconStyle = {\r\n    height: \"25px\",\r\n  };\r\n\r\n  const handleChoose = (item) => {\r\n    if (!props.showFoundCharacter) {\r\n      //if choosen character is found...\r\n      if (props.foundIsCorrect(item)) {\r\n        props.addFoundSquare(\r\n          props.clickedCoordinates[0],\r\n          props.clickedCoordinates[1] + 100 // +100px for topbar height\r\n        );\r\n        props.handleFoundCharacter(item, props.checkGameOver);\r\n      } else {\r\n        props.toggleShowWrongFind();\r\n      }\r\n    }\r\n    props.closeFoundCharacter();\r\n  };\r\n  return (\r\n    <ListGroup style={style} className=\"charactersDropdown\">\r\n      {props.charactersArray &&\r\n        props.charactersArray.map((item, i) => {\r\n          return (\r\n            <ListGroup.Item key={i} action onClick={() => handleChoose(item)}>\r\n              <Image\r\n                style={iconStyle}\r\n                src={process.env.PUBLIC_URL + item.url}\r\n              ></Image>\r\n              {item.name}\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n      <ListGroup.Item action variant=\"dark\" onClick={props.closeFoundCharacter}>\r\n        Close\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default CharactersDropdown;\r\n","export default __webpack_public_path__ + \"static/media/picture.a621ccfd.jpg\";","import { React } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst WrongFind = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.showWrongFind}\r\n      size=\"sm\"\r\n      onHide={props.toggleShowWrongFind}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Nope!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Keep looking...</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={props.toggleShowWrongFind}>\r\n          Continue\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WrongFind;\r\n","import { React, useState } from \"react\";\r\nimport CharactersDropdown from \"./CharactersDropdown\";\r\nimport picture from \"../assets/picture.jpg\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nimport WrongFind from \"./WrongFind\";\r\nimport \"../App.css\";\r\n\r\nfunction Picture(props) {\r\n  const [showFoundCharacter, setShowFoundCharacter] = useState(false);\r\n  const [showWrongFind, setShowWrongFind] = useState(false);\r\n  const [clickedCoordinates, setClickedCoordinates] = useState([0, 0]);\r\n  const [dropdownY, setDropdownY] = useState(-140);\r\n\r\n  const getDropdownY = (y) => {\r\n    if (y > props.windowHeight - 260) {\r\n      return -165;\r\n    } else {\r\n      return 105;\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    let x = e.pageX;\r\n    // -100(topbar), top left picture corner is 0.0\r\n    let y = e.pageY - 100;\r\n    let clientY = y + 100;\r\n\r\n    setClickedCoordinates([x, y]);\r\n    setDropdownY(getDropdownY(clientY));\r\n\r\n    setShowFoundCharacter(!showFoundCharacter);\r\n  };\r\n\r\n  const toggleShowWrongFind = () => {\r\n    setShowWrongFind(!showWrongFind);\r\n  };\r\n\r\n  const closeFoundCharacter = () => {\r\n    setShowFoundCharacter(false);\r\n  };\r\n\r\n  const foundIsCorrect = (item) => {\r\n    if (\r\n      clickedCoordinates[0] < item.position[0] * props.windowWidth + 30 &&\r\n      clickedCoordinates[0] > item.position[0] * props.windowWidth - 30 &&\r\n      //-100 topbar height\r\n      clickedCoordinates[1] <\r\n        item.position[1] * (props.windowHeight - 100) + 30 &&\r\n      clickedCoordinates[1] > item.position[1] * (props.windowHeight - 100) - 30\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //make square size dinamic\r\n  const addFoundSquare = (x, y) => {\r\n    let array = props.foundSquares;\r\n    const squareStyle = {\r\n      position: \"absolute\",\r\n      left: `${x - 30}px`,\r\n      top: `${y - 30}px`,\r\n      width: 60,\r\n      height: 60,\r\n      border: \"4px solid red\",\r\n    };\r\n    const newSquare = <div style={squareStyle} key={x * y}></div>;\r\n\r\n    props.setFoundSquares((array) => [array, newSquare]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Image\r\n        onClick={handleClick}\r\n        src={picture}\r\n        className=\"picture\"\r\n        onLoad={props.setWindowSize}\r\n      />\r\n      {showFoundCharacter && (\r\n        <CharactersDropdown\r\n          dropdownY={dropdownY}\r\n          clickedCoordinates={clickedCoordinates}\r\n          charactersArray={props.charactersArray}\r\n          handleFoundCharacter={props.handleFoundCharacter}\r\n          closeFoundCharacter={closeFoundCharacter}\r\n          foundIsCorrect={foundIsCorrect}\r\n          addFoundSquare={addFoundSquare}\r\n          toggleShowWrongFind={toggleShowWrongFind}\r\n          checkGameOver={props.checkGameOver}\r\n        />\r\n      )}\r\n      <WrongFind\r\n        showWrongFind={showWrongFind}\r\n        toggleShowWrongFind={toggleShowWrongFind}\r\n      />\r\n      {props.foundSquares}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Picture;\r\n","export const msToTime = (s) => {\r\n  // Pad to 2 or 3 digits, default is 2\r\n  function pad(n, z) {\r\n    z = z || 2;\r\n    return (\"00\" + n).slice(-z);\r\n  }\r\n\r\n  var ms = s % 1000;\r\n  s = (s - ms) / 1000;\r\n  var secs = s % 60;\r\n  s = (s - secs) / 60;\r\n  var mins = s % 60;\r\n\r\n  return pad(mins) + \":\" + pad(secs) + \".\" + pad(ms, 3);\r\n};\r\n\r\nexport const formatTime = (timer) => {\r\n  const getSeconds = `0${timer % 60}`.slice(-2);\r\n  const minutes = `${Math.floor(timer / 60)}`;\r\n  const getMinutes = `0${minutes % 60}`.slice(-2);\r\n  const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n\r\n  return ` ${getMinutes} : ${getSeconds}`;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { formatTime } from \"./helpers\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst Timer = (props) => {\r\n  const [timer, setTimer] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const countRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.player && props.gameStartTime) {\r\n      handleStart();\r\n    }\r\n  }, [props.player, props.gameStartTime]);\r\n\r\n  useEffect(() => {\r\n    if (!props.gameTime) {\r\n      handlePause();\r\n    }\r\n  }, [props.gameTime]);\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true);\r\n\r\n    countRef.current = setInterval(() => {\r\n      setTimer((timer) => timer + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    clearInterval(countRef.current);\r\n    setTimer(0);\r\n    setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar.Text>\r\n      <h4 style={{ marginBottom: 0, paddingRight: 20 }}>{formatTime(timer)}</h4>\r\n    </Navbar.Text>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Navbar, Container, Nav, Image } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\nfunction Topbar(props) {\r\n  const topbarStyle = {\r\n    height: \"100px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const imgStyle = {\r\n    height: \"2.5em\",\r\n  };\r\n  return (\r\n    <Navbar style={topbarStyle} bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n      <Container>\r\n        <Navbar.Brand className=\"title\">Find Me!</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          {props.charactersArray &&\r\n            props.charactersArray.map((item, i) => {\r\n              return (\r\n                <Nav.Link key={i}>\r\n                  <Image\r\n                    style={imgStyle}\r\n                    src={process.env.PUBLIC_URL + item.url}\r\n                  ></Image>\r\n                </Nav.Link>\r\n              );\r\n            })}\r\n        </Nav>\r\n\r\n        <Timer\r\n          charactersArray={props.charractersArray}\r\n          gameStartTime={props.gameStartTime}\r\n          gameTime={props.gameTime}\r\n          player={props.player}\r\n        ></Timer>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","// coordinates are relative to window size - 100px for topbar height, calculated to 3 decimal places\r\nexport const characters = [\r\n  {\r\n    id: 4,\r\n    name: \"Jake the dog\",\r\n    position: [0.784, 0.513],\r\n    url: \"/images/jake_the_dog.png\",\r\n  },\r\n\r\n  {\r\n    id: 0,\r\n    name: \"Mr.Peanutbuter\",\r\n    position: [0.911, 0.191],\r\n    url: \"/images/mrpeanutbutter.png\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Ned Flanders\",\r\n    position: [0.175, 0.341],\r\n    url: \"/images/ned_flanders.png\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Rick Sanchez\",\r\n    position: [0.687, 0.895],\r\n    url: \"/images/rick_sanchez.png\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Waldo\",\r\n    position: [0.284, 0.703],\r\n    url: \"/images/waldo.png\",\r\n  },\r\n  /*\r\n \r\n  {\r\n    id: 6,\r\n    name: \"Fred Flintstone\",\r\n    position: [0.092, 0.774],\r\n    url: \"/images/fred_flintstone.png\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sonic the Hedgehog\",\r\n    position: [0.757, 0.479],\r\n    url: \"/images/sonic_the_hedgehog.png\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Bugs Bunny King\",\r\n    position: [0.43, 0.439],\r\n    url: \"/images/bugs_bunny.png\",\r\n  },*/\r\n];\r\n","import { React, useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nconst StartModal = (props) => {\r\n  const [playerName, setPlayerName] = useState(\"\");\r\n\r\n  return (\r\n    <Modal\r\n      show={props.showStartModal}\r\n      size=\"sm\"\r\n      backdrop={\"static\"}\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>\r\n          Welcome to <strong>Find Me!</strong>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Form\r\n        onSubmit={(e) => {\r\n          props.toggleShowStartModal();\r\n          props.handleStartModalSubmit(e, playerName);\r\n          props.startGame();\r\n        }}\r\n      >\r\n        <Modal.Body>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"ps-1\">Enter your Nickname:</Form.Label>\r\n            <Form.Control\r\n              className=\"my-2\"\r\n              placeholder=\"Player1\"\r\n              onChange={(e) => setPlayerName(e.target.value)}\r\n              value={playerName}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted m-1  \" required>\r\n              Your Nickname will be displayed on leaderboard\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Play\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n      <div className=\"text-muted form-text ms-1\">\r\n        Icon by{\" \"}\r\n        <a\r\n          href=\"https://www.flaticon.com/authors/dimitry-miroliubov\"\r\n          title=\"Dimitry Miroliubov\"\r\n        >\r\n          Dimitry Miroliubov\r\n        </a>{\" \"}\r\n        from{\" \"}\r\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n          flaticon\r\n        </a>\r\n      </div>\r\n      <div className=\"text-muted form-text m-1 mt-0\">\r\n        Background by{\" \"}\r\n        <a\r\n          href=\"https://www.instagram.com/danielkeoghart/\"\r\n          title=\"Daniel Keogh\"\r\n        >\r\n          Daniel Keogh\r\n        </a>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StartModal;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvQcbzXdQfFcp5j3LErFUWtHPik5Qfu38\",\r\n  authDomain: \"where-is-waldo-fcfa2.firebaseapp.com\",\r\n  projectId: \"where-is-waldo-fcfa2\",\r\n  storageBucket: \"where-is-waldo-fcfa2.appspot.com\",\r\n  messagingSenderId: \"318862658885\",\r\n  appId: \"1:318862658885:web:cb2e2c6e6e4ab04f5ec22c\",\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore(app);\r\n\r\n//export const timestamp = db.Timestamp.now();\r\nexport default app;\r\n","import { React } from \"react\";\r\nimport { msToTime } from \"./helpers\";\r\nimport { Modal, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst Leaderboard = (props) => {\r\n  const listGroupStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  return (\r\n    <Modal\r\n      show={props.showGameOverModal}\r\n      size=\"sm\"\r\n      backdrop={\"static\"}\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Leaderboard</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n            <strong>Your time: {msToTime(props.gameTime)}</strong>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <br />\r\n        <ListGroup>\r\n          {props.resultsData.map((item, i) => {\r\n            return (\r\n              <ListGroup.Item key={i} style={listGroupStyle}>\r\n                <div>\r\n                  {i + 1}\r\n                  {\".\"} {item.playerName}\r\n                </div>\r\n                <div>{msToTime(item.time)}</div>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.toggleShowGameOverModal();\r\n            props.playAgain();\r\n          }}\r\n        >\r\n          Play Again\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n","import { React, useState, useEffect } from \"react\";\nimport Picture from \"./components/Picture\";\nimport Topbar from \"./components/Topbar\";\nimport { characters } from \"./components/Characters\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport StartModal from \"./components/StartModal\";\nimport { db } from \"./components/Firebase\";\nimport {\n  collection,\n  query,\n  addDoc,\n  getDocs,\n  Timestamp,\n  orderBy,\n  limit,\n} from \"firebase/firestore\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nfunction App() {\n  const [showStartModal, setShowStartModal] = useState(true);\n  const [showGameOverModal, setShowGameOverModal] = useState(false);\n  const [charactersArray, setCharactersArray] = useState(null);\n  const [foundSquares, setFoundSquares] = useState([]);\n  const [resultsData, setResultsData] = useState([]);\n  const [player, setPlayer] = useState(null);\n  const [windowWidth, setWindowWidth] = useState(null);\n  const [windowHeight, setWindowHeight] = useState(null);\n  const [gameStartTime, setGameStartTime] = useState(null);\n  const [gameTime, setGameTime] = useState(null);\n\n  useEffect(() => {\n    setCharactersArray(characters);\n  }, []);\n\n  useEffect(() => {\n    if (charactersArray) {\n      checkGameOver();\n    }\n  }, [charactersArray]);\n\n  const setWindowSize = () => {\n    setWindowWidth(document.body.clientWidth);\n    setWindowHeight(document.body.clientHeight);\n  };\n\n  const startGame = () => {\n    let gameStartTime = Timestamp.now().toMillis();\n    setGameStartTime(gameStartTime);\n  };\n\n  const endGame = () => {\n    let gameEndTime = Timestamp.now().toMillis();\n    let gameTime = gameEndTime - gameStartTime;\n    setGameTime(gameTime);\n    postResult(player, gameTime);\n  };\n\n  const playAgain = () => {\n    setCharactersArray(characters);\n    setShowGameOverModal(false);\n    setShowStartModal(true);\n    setGameTime(null);\n    setGameStartTime(null);\n    setFoundSquares([]);\n  };\n\n  const postResult = async (player, time) => {\n    const docRef = await addDoc(collection(db, \"results\"), {\n      playerName: player,\n      time: time,\n    });\n  };\n\n  const getResultsData = async () => {\n    let array = [];\n    const resultsRef = collection(db, \"results\");\n    const q = query(resultsRef, orderBy(\"time\"), limit(10));\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      array.push(doc.data());\n    });\n    setResultsData(array);\n  };\n\n  const toggleShowStartModal = () => {\n    setShowStartModal(!showStartModal);\n  };\n\n  const toggleShowGameOverModal = () => {\n    setShowGameOverModal(!showGameOverModal);\n  };\n\n  const handleStartModalSubmit = (e, playerName) => {\n    e.preventDefault();\n    setPlayer(playerName);\n  };\n\n  const handleFoundCharacter = (item) => {\n    const index = item.id;\n    let newArray = charactersArray.filter((item) => item.id !== index);\n    setCharactersArray(newArray);\n  };\n\n  const checkGameOver = () => {\n    if (charactersArray.length === 0) {\n      endGame();\n      getResultsData();\n      setShowGameOverModal(true);\n    }\n  };\n\n  return (\n    <>\n      <StartModal\n        showStartModal={showStartModal}\n        player={player}\n        startGame={startGame}\n        toggleShowStartModal={toggleShowStartModal}\n        handleStartModalSubmit={handleStartModalSubmit}\n      />\n      <Leaderboard\n        gameTime={gameTime}\n        showGameOverModal={showGameOverModal}\n        resultsData={resultsData}\n        toggleShowGameOverModal={toggleShowGameOverModal}\n        playAgain={playAgain}\n      />\n      <Topbar\n        gameStartTime={gameStartTime}\n        gameTime={gameTime}\n        charactersArray={charactersArray}\n        toggleShowStartModal={toggleShowStartModal}\n        toggleShowGameOverModal={toggleShowGameOverModal}\n        player={player}\n      />\n      <Picture\n        charactersArray={charactersArray}\n        windowWidth={windowWidth}\n        windowHeight={windowHeight}\n        characters={charactersArray}\n        foundSquares={foundSquares}\n        setFoundSquares={setFoundSquares}\n        setWindowSize={setWindowSize}\n        handleFoundCharacter={handleFoundCharacter}\n        checkGameOver={checkGameOver}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}